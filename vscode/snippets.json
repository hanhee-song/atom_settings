{
  "debugger": {
    "scope": "javascript,typescript",
    "prefix": "d",
    "body": [
      "debugger"
    ]
  },
  "div with class": {
    "scope": "html,javascript,typescript",
    "prefix": "di",
    "body": [
      "<div class=\"${1:}\">${0:}</div>"
    ]
  },
  "div with class and space": {
    "scope": "html,javascript,typescript",
    "prefix": "div",
    "body": [
      "<div class=\"${1:}\">\n  ${0:}\n</div>"
    ]
  },
  // "anchor tag with routerLink": {
  //   "scope": "html",
  //   "prefix": "a",
  //   "body": [
  //     "<a routerLink=\"/${1:}\">${2:}</a>"
  //   ]
  // },
  "input with class": {
    "scope": "html,javascript,typescript",
    "prefix": "input",
    "body": [
      "<input class=\"${1:}\" type=\"${2:text}\">${0:}"
    ]
  },
  "log": {
    "scope": "javascript,typescript",
    "prefix": "l",
    "body": [
      "console.log(${0:})"
    ]
  },
  "import": {
    "scope": "javascript,typescript",
    "prefix": "import",
    "body": [
      "import { $1 } from '$2';",
      "$0"
    ]
  },
  "Sysout": {
    "scope": "java",
    "prefix": "s",
    "body": [
      "System.out.println($0);"
    ]
  },
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
}
